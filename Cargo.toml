[workspace]
resolver = "2"

# Config for 'cargo dist'
[workspace.metadata.dist]
# The preferred cargo-dist version to use in CI (Cargo.toml SemVer syntax)
cargo-dist-version = "0.0.7"
# The preferred Rust toolchain to use in CI (rustup toolchain syntax)
rust-toolchain-version = "1.68.2"
# CI backends to support (see 'cargo dist generate-ci')
ci = ["github"]
# The installers to generate for each app
installers = ["shell"]
# Target platforms to build apps for (Rust target-triple syntax)
targets = ["x86_64-unknown-linux-gnu"]

# The profile that 'cargo dist' will build with
[profile.dist]
inherits = "release"
opt-level = 's'
strip = true
lto = "thin"

[package]
name = "displex"
version = "0.11.7"
edition = "2021"
authors = ["Mike Chester <mike@chester.dev>"]
readme = "README.md"
repository = "https://github.com/mchestr/displex"
license-file = "LICENSE"
keywords = ["discord", "plex", "tautulli", "discord-linked-role"]

[dependencies]
anyhow = "1.0.71"
async-trait = "0.1.68"
axum = { version = "0.6.18", features = ["tracing"] }
axum-sessions = "0.5.0"
async-graphql-axum = "5.0.7"
async-graphql = { version = "5.0.7", features = [
    "chrono",
    "decimal",
    "uuid",
    "dataloader",
] }
chrono = { version = "0.4.24", features = ["serde"] }
clap = { version = "4.3.0", features = ["derive", "env"] }
derivative = "2.2.0"
derive_more = "0.99.17"
dotenvy = "0.15.7"
figment = { version = "0.10.8", features = ["env", "json", "toml", "yaml"] }
humantime = "2.1.0"
humantime-serde = "1.1.1"
oauth2 = "4"
reqwest = { version = "0.11.18", features = ["json", "rustls-tls-native-roots"], default-features = false }
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
serde_qs = "0.12.0"
serenity = "0.11"
sqlx = { version = "0.6.3", features = ["runtime-tokio-rustls", "postgres", "uuid", "chrono", "offline"] }
tokio = { version = "1", features = ["full", "tracing"] }
tower-http = { version = "0.4.0", features = ["catch-panic", "cors", "trace"] }
tracing = "0.1"
tracing-actix-web = "0.7.5"
tracing-subscriber = { version = "0.3", features = ["env-filter"] }
uuid = { version = "1.3.3", features = ["fast-rng"] }
sea-orm = { version = "0.11.3", features = [
    "sqlx-mysql",
    "sqlx-postgres",
    "sqlx-sqlite",
    "runtime-tokio-rustls",
    "macros",
    "with-chrono",
    "with-uuid",
    "with-rust_decimal",
    "debug-print",
] }
sea-orm-migration = "0.11.1"
sea-query = "0.28.5"
tower-cookies = "0.9.0"
