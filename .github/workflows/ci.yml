name: CI

permissions:
  packages: write

on:
  push:
    branches: ["main"]
  pull_request:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  npm-test:
    name: NPM Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4
      - name: Use Node.js
        uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4
      - run: npm ci
        working-directory: web
      - run: npm run build --if-present
        working-directory: web

  cargo-check:
    name: Cargo check
    runs-on: "ubuntu-latest"
    steps:
      - name: Check out the repo
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4

      - uses: "actions-rs/toolchain@16499b5e05bf2e26879000db0c1d13f7e13fa3af" # v1
        with:
          profile: "minimal"
          toolchain: "stable"
          override: true

      - uses: "actions-rs/cargo@844f36862e911db73fe0815f00a4a2602c279505" # v1
        with:
          command: check
          args: "--manifest-path=server/Cargo.toml"

  cargo-test:
    name: Cargo test
    runs-on: "ubuntu-latest"
    steps:
      - name: "Check out the repo"
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4

      - uses: "actions-rs/toolchain@16499b5e05bf2e26879000db0c1d13f7e13fa3af" # v1
        with:
          profile: "minimal"
          toolchain: "stable"
          override: true

      - uses: "actions-rs/cargo@844f36862e911db73fe0815f00a4a2602c279505" # v1
        with:
          command: test
          args: "--manifest-path=server/Cargo.toml"

  cargo-fmt:
    name: Cargo format
    runs-on: "ubuntu-latest"
    steps:
      - name: "Check out the repo"
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4

      - uses: "actions-rs/toolchain@16499b5e05bf2e26879000db0c1d13f7e13fa3af" # v1
        with:
          profile: "minimal"
          toolchain: "nightly"
          override: true

      - run: "rustup component add rustfmt"

      - uses: "actions-rs/cargo@844f36862e911db73fe0815f00a4a2602c279505" # v1
        with:
          command: fmt
          args: "--all --manifest-path=server/Cargo.toml -- --check "

  cargo-clippy:
    name: Cargo clippy
    runs-on: "ubuntu-latest"
    steps:
      - name: "Check out the repo"
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4

      - uses: "actions-rs/toolchain@16499b5e05bf2e26879000db0c1d13f7e13fa3af" # v1
        with:
          profile: "minimal"
          toolchain: "stable"
          override: true

      - run: "rustup component add clippy"

      - uses: "actions-rs/cargo@844f36862e911db73fe0815f00a4a2602c279505" # v1
        with:
          command: clippy
          args: "--manifest-path=server/Cargo.toml -- -D warnings"

  publish-docker:
    name: Publish Docker image
    runs-on: ubuntu-latest
    needs:
      - npm-test
      - cargo-check
      - cargo-test
      - cargo-clippy
      - cargo-fmt
    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3

      - name: Login to Docker Hub
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@8e5442c4ef9f78752691e2d8f8d19755c6f78e81 # v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push
        uses: docker/build-push-action@4a13e500e55cf31b7a5d59a38ab2040ab0f42f56 # v5
        with:
          context: .
          target: runtime
          push: true
          platforms: linux/amd64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
